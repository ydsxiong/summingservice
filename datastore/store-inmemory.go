package datastore

import (
	"sync"
)

/**
a thread safe in-memory data store
*/
type inMemoryStore struct {
	msgs []DataMessage
	mux  sync.RWMutex
}

func NewInMemoryDataStore() *inMemoryStore {
	return new(inMemoryStore)
}

/**
in the context of database store, these two fields: id and createdAt
would have been generated by the database insert operation.
*/
func (s *inMemoryStore) Save(msg DataMessage) error {
	s.mux.Lock()
	defer s.mux.Unlock()
	s.msgs = append(s.msgs, msg)
	return nil
}

func (s *inMemoryStore) FetchAll() ([]DataMessage, error) {
	s.mux.RLock()
	defer s.mux.RUnlock()
	result := make([]DataMessage, 0)
	for _, msg := range s.msgs {
		result = append(result, msg)
	}
	return result, nil
}
